# 파이썬 데이터 타입 연습
print("hello python")

# 리스트 (배열)
# 파이썬에서 리스트는 C언어 리스트와는 다르다.
# C언어 리스트는 (구조체가 아닌 이상....)하나의 자료형으로 나열되도록 하지만 파이썬은 여러 데이터 타입을 넣을수 있다.


ary = [1,2,3,4] # C언어와 헷갈리지 말자. ary[바이트 크기] = {1,2,3,4}
print(ary)
print(type(ary))

ary = [1,True,"파이썬"]
print(ary)
print(type(ary))

# 리스트안에 있는 것들을 요소라고 한다.
# []안에 들어있는 숫자를 인덱스라고 부르며 요소들을 변경하거나 선택할수있다.

list1 = [1,2,3,4]
list1[-1] = 5 #음수를 넣어 인덱싱 할경우 뒤에서부터의 요소를 선택할수 있다.
print(list1)

list2 = ['안','녕','파','이','썬']
list2[0] = "안녕파이썬"
# 리스트안에 문자열(문자의리스트) 불러오기 즉 문자를 가져온다.
print(list2[0][0]) # [] <- 리스트 접근 연산자
print(list2[0][1])
print(list2[0][2])
print(list2[0][3])
print(list2[0][4])

list3 =[[1,2,3,4],[5,6,7,8],[9,10,11,12]] # 리스트 안에 리스트 : 2차원 배열....
print(list3)
print(list3[0][0]) # 1 불러오기
print(list3[1][1]) # 6 불러오기
print(list3[2][2]) # 11 불러오기
# 요소.. 인덱스를 벗어나면 에러 발생

# 리스트 연산 (+,*,len)
# *는 문자열 반복 연산자.
# len 함수를 쓰면 list의 요소 값을 반환한다.
print(list1 + list2)
print(list3*3)
print(len(list3))

# 리스트 요소 추가
# 멤버 접근 연산자? 일단 .함수 꼴인데 그럼 리스트 자체는 클래스가 되는건가?
list4 = [1,2,3]
# append 함수는 리스트의 가장 마지막 요소에 해당 값을 추가하여준다.
list4.append(4)
list4.append(5)
print(list4)
# insert() 함수는 매개변수로 2개가 들어가며, (위치,요소) 값을 넣는다. 자리가 하나씩 밀려남...!!
list4.insert(0,100)
list4.insert(1,200)
print(list4)
# extend() 함수는 매개변수로 리스트를 넣어 해당 리스트에 한번에 추가하여 준다.
list4.extend([1,2,3,4,5,6])

# 여기서 개념. 리스트 원본에 영향을 주지 않는 것을 비파괴적 이라고 표현하고 / 리스트 원본에 영향을 주는 것을 파괴적이라고 표현함
# 즉 방금과 같이 append(),insert,extend()와 같은 함수는 파괴적이라고 표현한다.
# 자료는 항상 비파괴적으로 사용하는 것이 좋다

# 인덱스 제거, 또는 리스트제거 del 키워드...

del list1,list2,list3 # 리스트를 지운다.

del list4[0] #list4의 첫번재 요소만 지운다.

# pop() 함수 / 매개변수로 인덱스 값이 들어감.
list4.pop(2) #list4의 세번째 요소만 지운다.

# 리스트 슬라이싱 연산자 [시작 인덱스: 끝 인덱스: 단계]
# 단계는 지정한 숫자만큼 건너뛰며 요소를 가져옴. 기본값은 1
